"""
Упражнение 134. Все подсписки заданного списка
Используя определение подсписка из упражнения 133, напишите функцию, возвращающую список, содержащий все возможные
подсписки заданного. Например, в число подсписков списка [1, 2, 3] входят следующие: [], [1], [2], [3], [1, 2], [2, 3]
и [1, 2, 3]. Заметьте, что ваша функция должна вернуть как минимум один пустой список,
гарантированно являющийся подсписком для любого списка. Напишите основную программу,
демонстрирующую работу функции применительно к нескольким исходным спискам.
"""
larger = [1, 2, 3]
list_sublists = [[]]

def check(larger):
    # Каждая итерация внешнего цикла определяет длину подсписков, а внутренняя начальный индекс этих подсписков
    for l in range(1, len(larger) + 1):
        for i in range(0, len(larger) - l + 1):
            list_sublists.append(larger[i:i + l])
    return list_sublists

def main():
    larger = list(map(int, input('Введите список чисел через пробел: ').split()))
    print('Подсписки вашего списка: ')
    print(check(larger))

if __name__ == '__main__':
    main()